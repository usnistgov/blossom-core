let BlossomObject = blossom_object;
let BlossomOA = blossom_OA;
let BlossomAdminUser = super:BlossomMSP;
let BlossomAdminUA = super:BlossomMSP_UA;

create policy super;
    # super policy
    create user attribute $BlossomAdminUA in super;
    create user $BlossomAdminUser in $BlossomAdminUA;

    create object attribute $BlossomOA in super;
    create object $BlossomObject in $BlossomOA;

    grant $BlossomAdminUA * on $BlossomOA;

#obligations
obligation request_account
when ANY_USER
performs request_account(account_name, sysOwner, sysAdmin, acqSpec)
do (
    # rbac policy
    create policy RBAC;
        #UA
        create user attribute RBAC_UA in RBAC;
        create user attribute Account_UA in RBAC_UA;
        create user attribute SystemOwner in RBAC_UA;
        create user attribute SystemAdministrator in RBAC_UA;
        create user attribute AcquisitionSpecialist in RBAC_UA;
        create user attribute Approvers in RBAC_UA;
        assign $BlossomAdminUser to Approvers;

        create user $sysOwner in SystemOwner, Account_UA;
        create user $sysAdmin in SystemAdministrator, Account_UA;
        create user $acqSpec in AcquisitionSpecialist, Account_UA;

        #OA
        create object attribute RBAC_OA in RBAC;
        create object attribute Account_OA in RBAC_OA;
        create object $account_name_object with properties account=$account_name, type=account in Account_OA;

        #Grants
        grant $BlossomAdminUA * on RBAC_UA;
        grant $BlossomAdminUA * on RBAC_OA;

        let SystemOwnerPermissions = upload_ato;
        let SystemAdminAssetsPermissions = check_out,initiate_check_in,report_swid;

        grant SystemOwner $SystemOwnerPermissions on Account_OA;
        grant SystemAdministrator $SystemAdminAssetsPermissions on Account_OA;

        grant Approvers approve_checkout,process_check_in on Account_OA;

    # status policy
    create policy Status;
        # UA
        create user attribute Status_UA in Status;
        create user attribute active in Status_UA;
        create user attribute pending in Status_UA;
        create user attribute inactive in pending;

        assign Account_UA to pending;

        # OA
        create object attribute Status_OA in Status;
        create object attribute status_accounts_OA in Status_OA;
        create object attribute status_assets_OA in Status_OA;
        create object attribute status_swids_OA in Status_OA;

        assign $account_name_object to status_accounts_OA;

        # grants
        grant $BlossomAdminUA * on Status_UA;
        grant $BlossomAdminUA * on Status_OA;
        grant active * on status_accounts_OA;
        grant pending upload_ato on status_accounts_OA;
        grant active * on status_assets_OA;
        grant active * on status_swids_OA;
);

obligation set_account_active
when ANY_USER
performs set_account_active(account)
do (
    deassign Account_UA from pending;
    deassign Account_UA from inactive;
    assign Account_UA to active;
);

obligation set_account_pending
when ANY_USER
performs set_account_pending(account)
do (
    assign Account_UA to pending;
    deassign Account_UA from inactive;
    deassign Account_UA from active;
);

obligation set_account_inactive
when ANY_USER
performs set_account_inactive(account)
do (
    deassign Account_UA from pending;
    assign Account_UA to inactive;
    deassign Account_UA from active;
);

